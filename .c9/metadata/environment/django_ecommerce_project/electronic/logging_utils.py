{"filter":false,"title":"logging_utils.py","tooltip":"/django_ecommerce_project/electronic/logging_utils.py","undoManager":{"mark":4,"position":4,"stack":[[{"start":{"row":0,"column":0},"end":{"row":42,"column":0},"action":"insert","lines":["# electronic/utils/logging_utils.py","","import logging","import boto3","import time","from logging.handlers import WatchedFileHandler","","# CloudWatch log group and stream","LOG_GROUP = 'django-logs'","LOG_STREAM = 'my-log-stream'","","# Boto3 client","cloudwatch_logs = boto3.client('logs', region_name='us-east-1')","","# Create a CloudWatch log stream if it doesn't exist","def create_log_stream():","    try:","        cloudwatch_logs.create_log_stream(","            logGroupName=LOG_GROUP,","            logStreamName=LOG_STREAM","        )","    except cloudwatch_logs.exceptions.ResourceAlreadyExistsException:","        pass","","# Custom handler for logging to CloudWatch","class CloudWatchLogHandler(logging.Handler):","    def emit(self, record):","        log_entry = self.format(record)","        timestamp = int(time.time() * 1000)  # Timestamp in milliseconds","        cloudwatch_logs.put_log_events(","            logGroupName=LOG_GROUP,","            logStreamName=LOG_STREAM,","            logEvents=[","                {","                    'timestamp': timestamp,","                    'message': log_entry","                }","            ]","        )","","# Run log stream creation at startup","create_log_stream()",""],"id":1}],[{"start":{"row":12,"column":51},"end":{"row":12,"column":62},"action":"remove","lines":["'us-east-1'"],"id":4},{"start":{"row":12,"column":51},"end":{"row":12,"column":75},"action":"insert","lines":["settings.AWS_REGION_NAME"]}],[{"start":{"row":4,"column":11},"end":{"row":5,"column":0},"action":"insert","lines":["",""],"id":8}],[{"start":{"row":5,"column":0},"end":{"row":5,"column":32},"action":"insert","lines":["from django.conf import settings"],"id":9}],[{"start":{"row":0,"column":0},"end":{"row":43,"column":0},"action":"remove","lines":["# electronic/utils/logging_utils.py","","import logging","import boto3","import time","from django.conf import settings","from logging.handlers import WatchedFileHandler","","# CloudWatch log group and stream","LOG_GROUP = 'django-logs'","LOG_STREAM = 'my-log-stream'","","# Boto3 client","cloudwatch_logs = boto3.client('logs', region_name=settings.AWS_REGION_NAME)","","# Create a CloudWatch log stream if it doesn't exist","def create_log_stream():","    try:","        cloudwatch_logs.create_log_stream(","            logGroupName=LOG_GROUP,","            logStreamName=LOG_STREAM","        )","    except cloudwatch_logs.exceptions.ResourceAlreadyExistsException:","        pass","","# Custom handler for logging to CloudWatch","class CloudWatchLogHandler(logging.Handler):","    def emit(self, record):","        log_entry = self.format(record)","        timestamp = int(time.time() * 1000)  # Timestamp in milliseconds","        cloudwatch_logs.put_log_events(","            logGroupName=LOG_GROUP,","            logStreamName=LOG_STREAM,","            logEvents=[","                {","                    'timestamp': timestamp,","                    'message': log_entry","                }","            ]","        )","","# Run log stream creation at startup","create_log_stream()",""],"id":10},{"start":{"row":0,"column":0},"end":{"row":40,"column":0},"action":"insert","lines":["# electronic/logging_utils.py","import logging","import boto3","from django.conf import settings","import time","","# CloudWatch log group and stream","LOG_GROUP = 'django-logs'","LOG_STREAM = 'my-log-stream'","","# Boto3 client","cloudwatch_logs = boto3.client('logs', region_name=settings.AWS_REGION_NAME)","","# Create a CloudWatch log stream if it doesn't exist","def create_log_stream():","    try:","        cloudwatch_logs.create_log_stream(","            logGroupName=LOG_GROUP,","            logStreamName=LOG_STREAM","        )","    except cloudwatch_logs.exceptions.ResourceAlreadyExistsException:","        pass","","# Custom handler for logging to CloudWatch","class CloudWatchLogHandler(logging.Handler):","    def emit(self, record):","        log_entry = self.format(record)","        timestamp = int(time.time() * 1000)  # Timestamp in milliseconds","        cloudwatch_logs.put_log_events(","            logGroupName=LOG_GROUP,","            logStreamName=LOG_STREAM,","            logEvents=[","                {","                    'timestamp': timestamp,","                    'message': log_entry","                }","            ]","        )","","# You no longer need to call create_log_stream() here, it will be done automatically",""]}]]},"ace":{"folds":[],"scrolltop":12.00000000000002,"scrollleft":0,"selection":{"start":{"row":34,"column":40},"end":{"row":34,"column":40},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1731520892649,"hash":"dfb4d16d5ef25be3d6ac06f64768a0ff8e417087"}