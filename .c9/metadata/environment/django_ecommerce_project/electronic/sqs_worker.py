{"filter":false,"title":"sqs_worker.py","tooltip":"/django_ecommerce_project/electronic/sqs_worker.py","undoManager":{"mark":0,"position":0,"stack":[[{"start":{"row":0,"column":0},"end":{"row":38,"column":0},"action":"insert","lines":["# sqs_worker.py","import boto3","import time","from django.conf import settings","","# Set up the SQS client","sqs = boto3.client('sqs', region_name=settings.AWS_REGION)","","def process_sqs_messages():","    \"\"\"","    Polls the SQS queue and processes messages.","    This should be run in a separate process or thread.","    \"\"\"","    while True:","        # Receive messages from the queue","        response = sqs.receive_message(","            QueueUrl=settings.AWS_SQS_QUEUE_URL,","            AttributeNames=['All'],","            MaxNumberOfMessages=10,  # Number of messages to fetch at once","            WaitTimeSeconds=20  # Long polling to reduce costs","        )","","        if 'Messages' in response:","            for message in response['Messages']:","                # Process each message","                print(f\"Processing message: {message['Body']}\")","                ","                # You can perform tasks like sending notifications, updating databases, etc.","","                # After processing, delete the message from the queue","                sqs.delete_message(","                    QueueUrl=settings.AWS_SQS_QUEUE_URL,","                    ReceiptHandle=message['ReceiptHandle']","                )","                print(f\"Message {message['MessageId']} deleted from queue.\")","        else:","            print(\"No messages in the queue. Sleeping for 20 seconds...\")","            time.sleep(20)",""],"id":2}],[{"start":{"row":0,"column":0},"end":{"row":38,"column":0},"action":"remove","lines":["# sqs_worker.py","import boto3","import time","from django.conf import settings","","# Set up the SQS client","sqs = boto3.client('sqs', region_name=settings.AWS_REGION)","","def process_sqs_messages():","    \"\"\"","    Polls the SQS queue and processes messages.","    This should be run in a separate process or thread.","    \"\"\"","    while True:","        # Receive messages from the queue","        response = sqs.receive_message(","            QueueUrl=settings.AWS_SQS_QUEUE_URL,","            AttributeNames=['All'],","            MaxNumberOfMessages=10,  # Number of messages to fetch at once","            WaitTimeSeconds=20  # Long polling to reduce costs","        )","","        if 'Messages' in response:","            for message in response['Messages']:","                # Process each message","                print(f\"Processing message: {message['Body']}\")","                ","                # You can perform tasks like sending notifications, updating databases, etc.","","                # After processing, delete the message from the queue","                sqs.delete_message(","                    QueueUrl=settings.AWS_SQS_QUEUE_URL,","                    ReceiptHandle=message['ReceiptHandle']","                )","                print(f\"Message {message['MessageId']} deleted from queue.\")","        else:","            print(\"No messages in the queue. Sleeping for 20 seconds...\")","            time.sleep(20)",""],"id":46},{"start":{"row":0,"column":0},"end":{"row":32,"column":0},"action":"insert","lines":["# sqs_worker.py (run as a separate process or thread)","import boto3","import time","from django.conf import settings","","# Initialize SQS client","sqs = boto3.client('sqs', region_name=settings.AWS_REGION)","","def process_sqs_messages():","    while True:","        # Receive messages from the queue","        response = sqs.receive_message(","            QueueUrl=settings.AWS_SQS_QUEUE_URL,","            AttributeNames=['All'],","            MaxNumberOfMessages=10,  # Adjust the number of messages you want to fetch at a time","            WaitTimeSeconds=20  # Long polling to reduce costs","        )","","        if 'Messages' in response:","            for message in response['Messages']:","                # Process the message (e.g., send a notification, perform a background task)","                print(f\"Processing message: {message['Body']}\")","                ","                # Delete the message from the queue after processing","                sqs.delete_message(","                    QueueUrl=settings.AWS_SQS_QUEUE_URL,","                    ReceiptHandle=message['ReceiptHandle']","                )","                print(f\"Message {message['MessageId']} deleted from queue.\")","        else:","            print(\"No messages in the queue, waiting for 20 seconds...\")","            time.sleep(20)",""]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":35,"column":13},"end":{"row":35,"column":13},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":247,"mode":"ace/mode/python"}},"timestamp":1731696562824,"hash":"e89d68aa36da7a27e4c58ff629759ed45e485e3f"}